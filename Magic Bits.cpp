include <bits/stdc++.h>
using namespace std;


int main()
{
    cin.tie(0); cout.tie(0); cin.sync_with_stdio(0);
    long long t, a, b, a1, b1;
    vector<long long> p={1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768, 65536, 131072, 
    262144, 524288, 1048576, 2097152, 4194304, 8388608, 16777216, 33554432, 67108864, 134217728, 268435456, 536870912, 
    1073741824, 2147483648, 4294967296, 8589934592, 17179869184, 34359738368, 68719476736, 137438953472, 274877906944, 
    549755813888, 1099511627776, 2199023255552, 4398046511104, 8796093022208, 17592186044416, 35184372088832, 70368744177664, 
    140737488355328, 281474976710656, 562949953421312, 1125899906842624, 2251799813685248, 4503599627370496, 9007199254740992, 
    18014398509481984, 36028797018963968, 72057594037927936, 144115188075855872, 288230376151711744, 576460752303423488, 
    1152921504606846976, 2305843009213693952, 4611686018427387904};

    cin >> t;
    for (long long i = 0; i < t; i++)
    {
        cin >> a >> b;
        a1 = a;
        b1 = b;
        if (a > b) 
        {
            cout << -1 << "\n";
        }
        else if (a == b) 
        {
            cout << 0 << "\n";
        }
        else if ((a | b)==b)
        {
            cout << 1 << "\n";
        }        
        else
        {
            unordered_map <int, int> m1;
            vector<int> vec1(64, 0); // a
            vector<int> vec2(64, 0); //b
            vector<int> vec3(64, 0); //final
            int i = 0;
            bool found_h = false;
            int high_ind1 = 0, low_ind1 = 0;
            while (b > 0) {
                if (a > 0)
                {
                    vec1[63-i] = a % 2;
                    a = a / 2;
                }
                vec2[63-i] = b % 2;
                b = b / 2;
   
                if(vec1[63-i]==1 && vec2[63-i]==0)
                {
                    low_ind1 = 63-i;
                    found_h = false;
                }
                
                if(vec1[63-i]==0 && vec2[63-i]==1 && found_h == false)
                {
                    high_ind1 = 63-i;
                    found_h = true;
                } 
                
                if (vec1[63-i] == 0 && vec2[63-i] == 1)
                {
                    vec3[63-i] = 0;
                }
                else if (vec1[63-i] == 0 && vec2[63-i] == 0) vec3[63-i] = 0;
                else if (vec1[63-i] == 1 && vec2[63-i] == 1) vec3[63-i] = 1;                
                
                i++;
            } 
            vec3[high_ind1] = 1;         
        
            long long ss = 0;
            for (int k = 1; k <= high_ind1; k++) 
            {
                if (vec3[k]>0)
                {
                    ss += p[63-k];
                }
            }
            cout << min(ss - a1 + 1, b1 - a1) << "\n";
        }
    }
}
